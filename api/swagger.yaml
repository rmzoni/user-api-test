---
swagger: "2.0"
info:
  description: "This is a sample REST API for the User domain.  You can find out more\
    \ about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\
    \ #swagger](http://swagger.io/irc/)."
  version: "1.0.0"
  title: "User RESTful API"
  contact:
    email: "rafael.manzoni@gft.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8243"
basePath: "/users/v1"
tags:
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /users:
    get:
      tags:
      - "user"
      summary: "Get all users"
      description: "This operartion query for all users."
      operationId: "getUsers"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "Username to filter users"
        required: false
        type: "string"
      - name: "firstName"
        in: "query"
        description: "Firstname like to filter users"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        204:
          description: "Users not found"
        400:
          description: "Invalid query parameters supplied"
      x-swagger-router-controller: "User"
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This operartion creates a new user and return the user identifier."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid user parameters supplied"
      x-swagger-router-controller: "User"
  /users/{user_id}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        204:
          description: "User not found"
        400:
          description: "Invalid user_id supplied"
      x-swagger-router-controller: "User"
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
    example:
      firstName: "firstName"
      lastName: "lastName"
      password: "password"
      phone: "phone"
      id: 0
      email: "email"
      username: "username"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
